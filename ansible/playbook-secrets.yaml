---
- name: Personal Arch Post-Install Secrets
  hosts: localhost
  become: true

  vars_prompt:
    - name: "user"
      prompt: "Which username should be configured?"
      private: no

  tasks:
    - name: Decrypt secrets file
      become_user: "{{ user }}"
      shell: |
        sops --decrypt /home/{{ user }}/arch-bootstrap/secrets/git.enc.yaml > /home/{{ user }}/secrets.yaml
      args:
        executable: /bin/bash

    - name: Load secrets variables
      include_vars:
        file: "/home/{{ user }}/secrets.yaml"
        name: secrets

    - name: Remove decrypted secrets file
      become_user: "{{ user }}"
      file:
        path: "/home/{{ user }}/secrets.yaml"
        state: absent

    - name: Ensure ~/.ssh exists
      become_user: "{{ user }}"
      file:
        path: "/home/{{ user }}/.ssh"
        state: directory
        mode: '0700'

    - name: Restore SSH private key from secrets
      become_user: "{{ user }}"
      copy:
        content: "{{ secrets.ssh_key }}"
        dest: "/home/{{ user }}/.ssh/id_ed25519"
        mode: '0600'
        owner: "{{ user }}"
        group: "{{ user }}"

    - name: Restore SSH public key (optional)
      become_user: "{{ user }}"
      shell: |
        ssh-keygen -y -f /home/{{ user }}/.ssh/id_ed25519 > /home/{{ user }}/.ssh/id_ed25519.pub
        chmod 644 /home/{{ user }}/.ssh/id_ed25519.pub
      args:
        executable: /bin/bash
    
    - name: Write GPG private key from secrets
      become_user: "{{ user }}"
      copy:
        content: "{{ secrets.gpg_key }}"
        dest: "/home/{{ user }}/my_gpg_private.asc"
        mode: '0600'
        owner: "{{ user }}"
        group: "{{ user }}"

    - name: Import GPG key into keyring
      become_user: "{{ user }}"
      shell: |
        gpg --import /home/{{ user }}/my_gpg_private.asc
        shred -u /home/{{ user }}/my_gpg_private.asc
      args:
        executable: /bin/bash

    - name: Set git user name from secrets
      become_user: "{{ user }}"
      git_config:
        name: user.name
        scope: global
        value: "{{ secrets.user_name }}"

    - name: Set git user email from secrets
      become_user: "{{ user }}"
      git_config:
        name: user.email
        scope: global
        value: "{{ secrets.user_email }}"

    - name: Set git signing key from secrets
      become_user: "{{ user }}"
      git_config:
        name: user.signingkey
        scope: global
        value: "{{ secrets.signing_key }}"

    - name: Enable GPG signing by default
      become_user: "{{ user }}"
      git_config:
        name: commit.gpgsign
        scope: global
        value: "true"
